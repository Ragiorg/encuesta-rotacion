generator client {
    provider = "prisma-client-js"
    output = "../.generated/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Organization {
  id             String           @id
  name           String           @unique
  description    String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  SurveyResponse SurveyResponse[]
  User           User[]
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SurveyResponse {
  id                       String       @id
  userId                   String?
  organizationId           String
  responses                Json
  completedAt              DateTime     @default(now())
  satisfactionScore        Int?
  workLifeBalance          Int?
  careerDevelopment        Int?
  managementQuality        Int?
  compensationSatisfaction Int?
  workEnvironment          Int?
  department               String?
  yearsInCompany           Int?
  ageRange                 String?
  position                 String?
  turnoverRisk             String?
  recommendCompany         Boolean?
  Organization             Organization @relation(fields: [organizationId], references: [id])
  User                     User?        @relation(fields: [userId], references: [id])
}

model User {
  id             String           @id
  name           String?
  email          String           @unique
  emailVerified  DateTime?
  image          String?
  role           UserRole         @default(EMPLOYEE)
  organizationId String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  password       String?
  Account        Account[]
  Session        Session[]
  SurveyResponse SurveyResponse[]
  Organization   Organization?    @relation(fields: [organizationId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum UserRole {
  EMPLOYEE
  ADMIN
}
